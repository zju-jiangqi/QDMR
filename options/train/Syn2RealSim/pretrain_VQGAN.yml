# general settings
name: VQGAN_pretrain_RealSim
model_type: UDAVQGAN
scale: 1
num_gpu: 1 # set num_gpu: 0 for cpu mode
manual_seed: 0

# dataset and data loader settings
datasets:
  train:
    name: MOS2K_src
    type: UDADataset
    dataroot_gt: datasets/Realab/Syn/S1/train
    dataroot_lq: datasets/Realab/Syn/S1/train
    dataroot_trg: datasets/Realab/Real-Sim/S1/train

    filename_tmpl: '{}'
    io_backend:
      type: disk

    gt_size: 256
    use_flip: true
    use_rot: true

    # data loader
    num_worker_per_gpu: 8
    batch_size_per_gpu: 8
    dataset_enlarge_ratio: 1
    prefetch_mode: ~



  val_0:
    name: MOS2K-trg
    type: PairedImageDataset
    dataroot_gt: datasets/Realab/Real-Sim/S1/val
    dataroot_lq: datasets/Realab/Real-Sim/S1/val
    io_backend:
      type: disk

# network structures
network_g:
  type: UDAVQGAN
  in_channel: 3
  gt_resolution: 256
  norm_type: 'gn'
  act_type: 'silu'
  use_semantic_loss: true
  codebook_params: # has to order from low to high
    - [32, 1024, 512]

  # for HQ stage training
  LQ_stage: false 
  use_quantize: true
  
network_d:
  type: UNetDiscriminatorSN 
  num_in_ch: 3

network_df:
  type: UNetDiscriminatorSN
  num_in_ch: 256

# path
path:
  strict_load: false 


# training settings
train:
  optim_g:
    type: Adam
    lr: !!float 1e-4
    weight_decay: 0
    betas: [0.9, 0.99]
  optim_d:
    type: Adam
    lr: !!float 4e-4
    weight_decay: 0
    betas: [0.9, 0.99]

  scheduler:
    type: MultiStepLR
    milestones: [50000, 100000, 150000, 200000, 250000, 300000, 350000]
    gamma: 1

  total_iter: 200000
  warmup_iter: -1  # no warm up

  # losses
  pixel_opt:
    type: L1Loss
    loss_weight: 1.0 
    reduction: mean

  perceptual_opt:
    type: LPIPSLoss
    loss_weight: !!float 1.0
    

  gan_opt:
    type: GANLoss
    gan_type: lsgan
    real_label_val: 1.0
    fake_label_val: 0.0
    loss_weight: 0.1

  gan_opt_f:
    type: GANLoss
    gan_type: lsgan
    real_label_val: 1.0
    fake_label_val: 0.0
    loss_weight: 0.1


  codebook_opt:
    loss_weight: 1.0

  semantic_opt:
    loss_weight: 0.1 

  net_d_iters: 1
  net_d_init_iters: !!float 0 

# validation settingsÂ·
val:
  val_freq: !!float 2e4
  save_img: true

  metrics:
    psnr: # metric name, can be arbitrary
      type: calculate_psnr
      crop_border: 0
      test_y_channel: false
    ssim: # metric name, can be arbitrary
      type: calculate_ssim
      crop_border: 0
      test_y_channel: false
    lpips: # metric name, can be arbitrary
      type: calculate_lpips
      crop_border: 0
      test_y_channel: false

# logging settings
logger:
  print_freq: 100
  save_checkpoint_freq: !!float 2e4
  use_tb_logger: true
  wandb:
    project: ~
    resume_id: ~

