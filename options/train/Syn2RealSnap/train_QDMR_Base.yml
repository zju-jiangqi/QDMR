# general settings
#take s1 as an example
#you can change the path for s2
name: QDMR_Base_Syn2RealSnap_S1                                      
model_type: QDMR_BaseModel
scale: 1
num_gpu: 1
manual_seed: 0

# dataset and data loader settings
datasets:
  train_src:
    name: MOS2K_src
    type: PairedImageDataset
    dataroot_gt: datasets/Realab/Syn/gt
    dataroot_lq: datasets/Realab/Syn/S1/train
    filename_tmpl: '{}'
    io_backend:
      type: disk

    gt_size: 256
    use_flip: true
    use_rot: true

    # data loader
    num_worker_per_gpu: 4
    batch_size_per_gpu: 8
    dataset_enlarge_ratio: 1
    prefetch_mode: ~

  train_trg:
    name: MOS2K_trg
    type: PairedImageDataset
    dataroot_gt: datasets/Realab/Real-Snap/S1_train_2K
    dataroot_lq: datasets/Realab/Real-Snap/S1_train_2K
    #keep target lq and gt the same for uda training
    filename_tmpl: '{}'
    io_backend:
      type: disk

    gt_size: 256
    use_flip: true
    use_rot: true

    # data loader
    num_worker_per_gpu: 4
    batch_size_per_gpu: 8
    dataset_enlarge_ratio: 4
    prefetch_mode: ~


  val_0:
    name: MOS2K-trg
    type: PairedImageDataset
    dataroot_gt: datasets/Realab/Real-Snap/S1_val_2K
    dataroot_lq: datasets/Realab/Real-Snap/S1_val_2K
    io_backend:
      type: disk

# network structures
network_g:
  type: QDMR_Base_Network
  in_channel: 3
  gt_resolution: 256
  norm_type: 'gn'
  act_type: 'silu'
  scale_factor: 1
  codebook_params:
    - [32, 1024, 512]

  LQ_stage: true
  use_weight: false
  weight_alpha: -1.0
  frozen_module_keywords: ['quantize']



network_d:
  type: UNetDiscriminatorSN 
  num_in_ch: 3

# path
path:
  pretrain_network_dmc: pretrain/DMC_snap_s1.pth
  pretrain_network_g: 
  # pretrain_network_d: ~
  strict_load: false 
  # resume_state: ~

# training settings 
train:
  optim_g:
    type: Adam
    lr: !!float 1e-4
    weight_decay: 0
    betas: [0.9, 0.99]
  optim_d:
    type: Adam
    lr: !!float 4e-4
    weight_decay: 0
    betas: [0.9, 0.99]

  scheduler:
    type: MultiStepLR
    milestones: [100000, 150000, 175000, 190000]
    gamma: 0.5

  total_iter: 200000
  warmup_iter: -1  # no warm up

  # losses
  pixel_opt:
    type: L1Loss
    loss_weight: 1.0 
    reduction: mean

  perceptual_opt:
    type: LPIPSLoss
    loss_weight: !!float 1.0
    
  gan_opt:
    type: GANLoss
    gan_type: hinge
    real_label_val: 1.0
    fake_label_val: 0.0
    loss_weight: 0.01


  codebook_opt:
    loss_weight: 1.0
  
  semantic_opt:
    loss_weight: 0.1 


  net_d_iters: 1
  net_d_init_iters: !!float 0 

# validation settingsÂ·
val:
  val_freq: !!float 1e4
  save_img: true

  metrics:
    niqe: # metric name, can be arbitrary
      type: calculate_niqe


# logging settings
logger:
  print_freq: 100
  save_checkpoint_freq: !!float 1e4
  use_tb_logger: true
  wandb:
    project: ~
    resume_id: ~
